INTRODUCTION:
-------------
Exceptions are object oriented way of dealing with errors. Exception should be planned & handled correctly. 

Exceptions objects are thrown from the normal execution of the code flow on certain defined/undefined situations. 

PHP Exception objects must be instance of build-in \Exception class or its subclass. 

To define the exception handling mechanism for thrown exceptions, the code flow should be within the try block. 

Exception should be thrown from inside the try block to be handled through catch-block or finally-block.


USAGE:
------
PHP provides try-catch, try-catch-finally and try-finally blocks for handling exceptions

try-BLOCK:
Normal code flow must be within the try block to handle the exceptions with custom logics. Eatch try-block must be followed by either one or more catch-block or one finally-block or both.

catch-BLOCK:
Exceptions thrown in try block must be caught in catch-block which is defined just after the try-block. 
There can be one or more catch-blocks.

When an exception is thrown in try block the execution state is saved in an exception object which is thne 

PHP 7.1 or later allows specifying multiple exception types in catch block arguments

finally-BLOCK:
Finally block is always executed wether an exception encountered or not during the try block execution.
Finally block is defined for closing/finalizing or cleanup specific code segments.


SYNTAX:
-------
try {
    // Normal code execution
} catch(\Exception $e) {
    // Deal with caught exception object
}

try {
    // Normal code execution
} finally {
    // Change execution direction
}


EXCEPTION CLASS:
----------------
Exception class is the base class for all the build-in or user-defined exceptions.



BEST PRACTICE:
--------------
The code segment which is expected to be thrown exceptions, should be placed inside the try-block.
If you know that the code segment can never throw any kind of exception, there is no need to place them inside try-block.


BUILT-IN SPL EXCEPTIONS:
--------------------
1. Exception implements Throwable => Base class of all the exceptions in PHP
2. Error implements Throwable => Base class for all php's internal error
3. 

01. BadFunctionCallException
02. BadMethodCallException
03. DomainException
04. InvalidArgumentException
05. LengthException
06. LogicException
07. OutOfBoundsException
08. OutOfRangeException
09. OverflowException
10. RangeException
11. RuntimeException
12. UnderflowException
13. UnexpectedValueException

1. LogicException extends Exception
    1a. BadFunctionCallException extends LogicException
        i. BadMethodCallException extends BadFunctionCallException
    b. DomainException extends LogicException
    c. InvalidArgumentException extends LogicException 
    d. LengthException extends LogicException
    e. OutOfRangeException extends LogicException

2. RuntimeException extends Exception
    a. OutOfBoundsException extends RuntimeException
    b. OverflowException extends RuntimeException
    c. RangeException extends RuntimeException
    d. UnderflowException extends RuntimeException
    e. UnexpectedValueException extends RuntimeException
3. ErrorException [ extends Exception ]


Build-in PHP Interface/Class for exception
 - Throwable interface
    - Exception
        - LogicException
            - BadFunctionCallException
                - BadMethodCallException
            - InvalidArgumentException
            - LengthException
            - DomainException
        - RuntimeException
            - OutOfBoundsException
            - OverflowException
            - RangeException
            - UnderflowException
            - UnexpectedValueException
        - ErrorException
    - Error
        - TypeError
            - ArgumentCountError
        - AssertionError
        - CompileError
            - ParseError
        - ArithmeticError
            - DivisionByZeroError


Build-in Error/Exception classes



ArgumentCountError [ extends TypeError ]
ArithmeticError [ extends Error ]
AssertionError [ extends Error ]
DivisionByZeroError [ extends ArithmeticError]
CompileError [ extends Error ]
ParseError [ extends CompileError ]
TypeError [ extends Error ]


Throwable is the base interface for any object that can be thrown via a throw statement in PHP 7, including Error and Exception

NOTES:
1. Exceptions cannot be cloned (It will generate fatal E_ERROR error)
2. PHP classes cannot implement the Throwable interface directly
